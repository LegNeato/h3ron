name: CI

on:
  pull_request:
    branches:
      - master
  release:
    types: [created]
  push:
    branches:
      - master
  schedule:
    - cron: "20 23 * * 4"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Pull git submodules
        run: |
          git submodule init
          git submodule update

      - name: Install GDAL
        run: |
          sudo apt-get update
          sudo apt-get install cmake libgdal-dev

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Lint with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt

      - name: Lint with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features

      - name: Test with cargo
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          toolchain: stable
          # exclude h3ronpy package while https://github.com/PyO3/pyo3/issues/340 is open
          args: --exclude h3ronpy --workspace

      # using a venv to make `maturin develop` work
      - name: create a virtualenv and install Python dependencies
        working-directory: h3ronpy
        run: |
          python -m venv venv
          . venv/bin/activate
          python install-dev-dependencies.py

      - name: Build python extension with maturin
        working-directory: h3ronpy
        run: |
          . venv/bin/activate
          maturin develop

      - name: pytest
        working-directory: h3ronpy
        run: |
          . venv/bin/activate
          pytest -v

#  build:
#    if: ${{ false }}  # disable for now
#    runs-on: ${{ matrix.os }}
#    needs: lint
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: [3.8]
#        os: [
#            ubuntu-latest,
#            #macos-latest,
#            windows-latest
#        ]
#
#    steps:
#
#      # https://github.com/rust-lang/rust-bindgen/issues/1797#issuecomment-787503355
#      - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
#        uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
#        if: matrix.os == 'windows-latest'
#        with:
#          version: "11.0"
#          directory: ${{ runner.temp }}/llvm
#
#      - name: Set LIBCLANG_PATH
#        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
#        if: matrix.os == 'windows-latest'
#
#      - name: Checkout
#        uses: actions/checkout@v1
#
#      - name: Pull git submodules
#        run: |
#          git submodule init
#          git submodule update
#
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v1
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Install latest stable
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          override: true
#
#      - name: Install Python dependencies
#        working-directory: h3ronpy
#        run: python install-dev-dependencies.py
#
#      - name: Build with cargo
#        uses: actions-rs/cargo@v1.0.1
#        with:
#          command: build
#          toolchain: stable
#
#      - name: Build python extension with maturin
#        working-directory: h3ronpy
#        run: maturin build

  rust-publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Pull git submodules
        run: |
          git submodule init
          git submodule update

      - name: Publish h3ron-h3-sys on crates.io
        working-directory: h3ron-h3-sys
        run: |
          cargo login ${{ secrets.CARGO }}
          cargo publish
          # wait a bit as the crates depend on each other and crates.io needs a few seconds
          # to synchronize after an upload
          sleep 10

      - name: Publish h3ron on crates.io
        working-directory: h3ron
        run: |
          cargo login ${{ secrets.CARGO }}
          cargo publish
          # wait a bit as the crates depend on each other and crates.io needs a few seconds
          # to synchronize after an upload
          sleep 10

      - name: Publish h3ron-ndarray on crates.io
        working-directory: h3ron-ndarray
        run: |
          cargo login ${{ secrets.CARGO }}
          cargo publish
          # wait a bit as the crates depend on each other and crates.io needs a few seconds
          # to synchronize after an upload
          sleep 10


  python-publish-manylinux-2-24:
    if: (github.event_name == 'release' && github.event.action == 'created') || github.event_name == 'schedule'
    needs: lint
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_24_x86_64
    steps:

      - uses: actions/checkout@v1

      - name: Pull git submodules
        run: |
          git submodule init
          git submodule update

      - name: Install latest stable rust
        run: |
          curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile minimal --default-toolchain stable -y

      - name: Install dependencies
        working-directory: h3ronpy
        run: |
          apt update
          apt install -y libgdal-dev clang-7
          export PATH="/opt/python/cp38-cp38/bin/:$PATH"
          pip install wheel
          python install-dev-dependencies.py

      - name: Build Python package
        working-directory: h3ronpy
        shell: bash
        run: |
          source $HOME/.cargo/env
          export PATH="/opt/python/cp38-cp38/bin/:$PATH"
          maturin build --release --strip --interpreter /opt/python/cp38-cp38/bin/python --manylinux 2_24

      - name: List wheels
        run: find ./target/wheels/

      - name: Install wheels
        run: |
          export PATH="/opt/python/cp38-cp38/bin/:$PATH"
          pip install target/wheels/h3ronpy*.whl

      - name: PyPi publish
        if: github.event_name == 'release' && github.event.action == 'created'
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI }}
        working-directory: h3ronpy
        shell: bash
        run: |
          source $HOME/.cargo/env
          export PATH="/opt/python/cp38-cp38/bin/:$PATH"
          maturin publish --username __token__

#  python-publish:
#    needs: build
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: [3.8]
#        os: [
#            #ubuntu-latest,
#            #macos-latest,
#            windows-latest
#        ]
#    steps:
#
#      # https://github.com/rust-lang/rust-bindgen/issues/1797#issuecomment-787503355
#      - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
#        uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
#        if: matrix.config.os == 'windows-latest'
#        with:
#          version: "11.0"
#          directory: ${{ runner.temp }}/llvm
#
#      - name: Set LIBCLANG_PATH
#        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
#        if: matrix.config.os == 'windows-latest'
#
#      # TODO: get GDAL for windows from ... somewhere
#
#      - uses: actions/checkout@v1
#
#      - uses: actions/setup-python@v1
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Pull git submodules
#        run: |
#          git submodule init
#          git submodule update
#
#      - name: Install latest stable
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          override: true
#
#      - name: Install dependencies
#        working-directory: h3ronpy
#        run: |
#          pip install wheel
#          python install-dev-dependencies.py
#
#      - name: Build Python package
#        working-directory: h3ronpy
#        run: maturin build --release --strip --interpreter python${{matrix.python_version}}
#
#      - name: List wheels
#        if: matrix.os == 'windows-latest'
#        run: dir target\wheels\
#
#      - name: List wheels
#        if:  matrix.os != 'windows-latest'
#        run: find ./target/wheels/
#
#      # Note: Windows doesn't support glob
#      # https://stackoverflow.com/a/52481267/270334
#      - name: Install wheels
#        if:  matrix.os == 'windows-latest'
#        run: pip install --find-links=target\wheels h3ronpy
#
#      - name: Install wheels
#        if:  matrix.os != 'windows-latest'
#        run: pip install target/wheels/h3ronpy*.whl
#
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: target/wheels/h3ronpy*.whl
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: PyPi publish
#        if: github.event_name == 'release' && github.event.action == 'created'
#        env:
#          MATURIN_PASSWORD: ${{ secrets.PYPI }}
#        working-directory: h3ronpy
#        run: maturin publish --username __token__
